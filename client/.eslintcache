[{"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\index.js":"1","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\login\\LoginCard.js":"2","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\timer\\index.js":"3","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\navbar\\Header.js":"4","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\quiz-creation\\CreateQuizForm.js":"5","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\signup\\SignupCard.js":"6","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\pages\\testPage\\index.js":"7","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\QuestionDisplay\\index.js":"8","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\Switch\\index.js":"9","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\reportWebVitals.js":"10","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\login\\LoginForm.js":"11","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\signup\\SignupForm.js":"12"},{"size":500,"mtime":1608342412474,"results":"13","hashOfConfig":"14"},{"size":234,"mtime":1608342412464,"results":"15","hashOfConfig":"14"},{"size":1553,"mtime":1608331172052,"results":"16","hashOfConfig":"14"},{"size":2100,"mtime":1608344608754,"results":"17","hashOfConfig":"14"},{"size":1215,"mtime":1608342412469,"results":"18","hashOfConfig":"14"},{"size":239,"mtime":1608342412471,"results":"19","hashOfConfig":"14"},{"size":1168,"mtime":1610135468755,"results":"20","hashOfConfig":"14"},{"size":1828,"mtime":1610135276745,"results":"21","hashOfConfig":"14"},{"size":546,"mtime":1610006306287,"results":"22","hashOfConfig":"14"},{"size":362,"mtime":1608342412474,"results":"23","hashOfConfig":"14"},{"size":1114,"mtime":1608342412465,"results":"24","hashOfConfig":"14"},{"size":3335,"mtime":1608342412472,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cm9wjb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\index.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\login\\LoginCard.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\timer\\index.js",[],["54","55"],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\navbar\\Header.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\quiz-creation\\CreateQuizForm.js",["56","57"],"import React, { useState } from 'react';\nimport QuizCreationContext from '../../utils/QuizCreationContext';\nimport MultChoiceForm from './MultChoiceForm';\nimport QuestionsList from './QuestionsList';\n\nfunction CreateQuizForm() {\n\tconst [questions, setQuestions] = useState([]);\n\tconst [title, setTitle] = useState('');\n\tconst [category, setCategory] = useState('');\n\n\treturn (\n\t\t<QuizCreationContext.Provider value={{ questions, setQuestions }}>\n\t\t\t<div className=\"container\">\n\t\t\t\t<form>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"title\">Enter Quiz Title</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\tonChange={(event) => setTitle(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"category\">Enter Category</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"category\"\n\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\tsetCategory(event.target.value)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<QuestionsList />\n\t\t\t\t<form>\n\t\t\t\t\t<MultChoiceForm />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</QuizCreationContext.Provider>\n\t);\n}\n\nexport default CreateQuizForm;\n","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\signup\\SignupCard.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\pages\\testPage\\index.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\QuestionDisplay\\index.js",["58","59","60"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport Switch from '../../components/Switch';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\nimport \"./style.css\";\r\nfunction QuestionDisplay(props) {\r\n    var answers=props.answers;\r\n    const [box, setBox] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        randomizer();\r\n        \r\n    }, []);\r\n    // props.question,props.answers[], props.right[],props.user, props.type props.background props.picture\r\n    function randomizer() {\r\n\r\n        let testArray = [];\r\n        let answerCount = props.answers.length;\r\n        let positionN = 0;\r\n        for (let i = 0; i < answerCount; i++) {\r\n            positionN = Math.floor(Math.random() * answers.length)\r\n            testArray.push(answers[positionN]);\r\n            answers.splice(positionN, 1);\r\n\r\n        }\r\n        console.log(box);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>{props.question}</h2>\r\n            <form>\r\n\r\n               { props.answers.map((answerOption, j) => {\r\n                   return(\r\n                    <div>\r\n                        <input type={props.type} id={\"answer_\" + j} name={\"answer_\" + j} />\r\n                        <label htmlFor={\"answer_\" + j}>{answerOption.text}</label><br />\r\n                        {(answerOption.img.length>0)?<img src={answerOption.img} alt={answerOption} style={{width:'300px'}} />: <br /> }\r\n                    </div>\r\n                   )\r\n                })}\r\n\r\n            </form>\r\n\r\n            {/* <InputGroup>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Radio aria-label=\"Radio button for following text input\" />\r\n    </InputGroup.Prepend>\r\n    <FormControl aria-label=\"Text input with radio button\" />\r\n\r\n  </InputGroup> */}\r\n\r\n\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\nexport default QuestionDisplay;","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\Switch\\index.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\reportWebVitals.js",[],["61","62"],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\login\\LoginForm.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\signup\\SignupForm.js",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":8,"column":9,"nodeType":"71","messageId":"72","endLine":8,"endColumn":14},{"ruleId":"69","severity":1,"message":"73","line":9,"column":9,"nodeType":"71","messageId":"72","endLine":9,"endColumn":17},{"ruleId":"69","severity":1,"message":"74","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"75","line":7,"column":17,"nodeType":"71","messageId":"72","endLine":7,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":12,"column":8,"nodeType":"78","endLine":12,"endColumn":10,"suggestions":"79"},{"ruleId":"65","replacedBy":"80"},{"ruleId":"67","replacedBy":"81"},{"ruleId":"69","severity":1,"message":"82","line":9,"column":9,"nodeType":"71","messageId":"72","endLine":9,"endColumn":17},{"ruleId":"69","severity":1,"message":"83","line":11,"column":9,"nodeType":"71","messageId":"72","endLine":11,"endColumn":17},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'title' is assigned a value but never used.","Identifier","unusedVar","'category' is assigned a value but never used.","'Switch' is defined but never used.","'setBox' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'randomizer'. Either include it or remove the dependency array.","ArrayExpression",["86"],["84"],["85"],"'username' is assigned a value but never used.","'birthday' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [randomizer]",{"range":"89","text":"90"},[372,374],"[randomizer]"]