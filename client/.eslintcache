[{"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\QuestionDisplay\\index.js":"1","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\Switch\\index.js":"2","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\pages\\testPage\\index.js":"3","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\timer\\index.js":"4","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\index.js":"5","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\signup\\SignupCard.js":"6","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\quiz-creation\\CreateQuizForm.js":"7","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\firebase.js":"8","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\ResultsDisplay\\index.js":"9"},{"size":1941,"mtime":1611892991185,"results":"10","hashOfConfig":"11"},{"size":546,"mtime":1610006306287,"results":"12","hashOfConfig":"11"},{"size":9774,"mtime":1611902846009,"results":"13","hashOfConfig":"11"},{"size":3816,"mtime":1611893022009,"results":"14","hashOfConfig":"11"},{"size":500,"mtime":1608342412474,"results":"15","hashOfConfig":"11"},{"size":239,"mtime":1608342412471,"results":"16","hashOfConfig":"11"},{"size":1262,"mtime":1611451546035,"results":"17","hashOfConfig":"11"},{"size":432,"mtime":1611451546044,"results":"18","hashOfConfig":"11"},{"size":763,"mtime":1611898981383,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"cm9wjb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\QuestionDisplay\\index.js",["40"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n// import Switch from '../../components/Switch';\r\nimport \"./style.css\";\r\nconst QuestionDisplay = props => {\r\n\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < document.querySelectorAll(\".checkOut\").length; i++) {\r\n            document.querySelector(\"#answer_\" + i).checked = false;\r\n            if (props.checkedMarks.indexOf(i) >= 0) document.querySelector(\"#answer_\" + i).checked = true;\r\n        }\r\n\r\n    });\r\n    function checkingMulti(e) {\r\n        if (props.type === 1) {\r\n            for (let i = 0; i < props.answers.length; i++) {\r\n                document.querySelector(\"#answer_\" + i).checked = false;\r\n\r\n            }\r\n            document.querySelector(\"#\" + e.target.id).checked = true;\r\n        }\r\n        let choice = [];\r\n        for (let i = 0; i < props.answers.length; i++) {\r\n            if (document.querySelector(\"#answer_\" + i).checked === true) {\r\n                choice.push(i);\r\n            }\r\n        }\r\n        props.onChange(choice);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            <form style={{ opacity: props.vis }}>\r\n                <h2 style={{ color: \"white\" }} >{props.question}</h2>\r\n                {props.answers.map((answerOption, j) => {\r\n                    return (\r\n                        <div>\r\n                            <input type=\"checkbox\" id={\"answer_\" + j} className=\"checkOut\" value={j} onChange={e => checkingMulti(e)} />\r\n                            <label htmlFor={\"answer_\" + j} style={{ color: \"white\", marginLeft: \"5px\" }}>{answerOption.text}</label><br />\r\n                            {(answerOption.img.length > 0) ? <img src={answerOption.img} alt={answerOption} style={{ width: '300px' }} /> : <br />}\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default QuestionDisplay;","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\Switch\\index.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\pages\\testPage\\index.js",["41"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport Timer from '../../components/timer';\r\nimport QuestionDisplay from '../../components/QuestionDisplay';\r\nimport ResultsDisplay from '../../components/ResultsDisplay';\r\nimport \"./style.css\";\r\nvar quizDuration=[1,0,0]\r\nvar quizMain = [{\r\n  \"question\": [\"What is not a part of the Solar system?\"],\r\n  \"rights\": [{ 'text': 'Galaxy', 'img': '/./images/galaxy.jpg', 'choice': true },\r\n  { 'text': 'Black Hole', 'img': '/./images/blackhole.jpg', 'choice': true }\r\n  ],\r\n  \"wrongs\": [{ 'text': 'Moon', 'img': '/./images/FullMoon.jpg', 'choice': false },\r\n  { 'text': 'Jupiter', 'img': '/./images/jupiter.jpg', 'choice': false },\r\n  { 'text': 'Mars', 'img': '/./images/mars.jpg', 'choice': false },\r\n  { 'text': 'Venus', 'img': '/./images/venus.jpg', 'choice': false },\r\n  { 'text': 'Ceres', 'img': '/./images/ceres.jpg', 'choice': false },\r\n  { 'text': 'Sun', 'img': '/./images/Solar_Orbiter.gif', 'choice': false }\r\n  ],\r\n  \"positions\": 5,\r\n  \"correct\": 1\r\n},\r\n{\r\n  \"question\": [\"What is bigger Ganymede or Mercury?\"],\r\n  \"rights\": [{ 'text': 'Ganymede', 'img': '/./images/ganymede.jpg', 'choice': true },\r\n  ],\r\n  \"wrongs\": [{ 'text': 'Mercury', 'img': '/./images/mercury.jpg', 'choice': false },\r\n  ],\r\n \r\n  \"positions\": 2,\r\n  \"correct\": 1\r\n},\r\n{\r\n  \"question\": [\"What is first cosmic velocity?\"],\r\n  \"rights\": [{ 'text': '7.9km/sec','img': '',  'choice': true },\r\n             { 'text': '4.9 miles/sec','img': '',  'choice': true },\r\n  ],\r\n  \"wrongs\": [{ 'text': '11.2km/sec','img': '', 'choice': false },\r\n             { 'text': '42km/sec','img': '', 'choice': false },\r\n             { 'text': '300m/sec','img': '', 'choice': false },\r\n             { 'text': '300,000km/sec','img': '', 'choice': false },\r\n             { 'text': '4km/sec','img': '', 'choice': false },\r\n  ],\r\n \r\n  \"positions\": 4,\r\n  \"correct\": 1\r\n},\r\n{\r\n  \"question\": [\"Choose all Solar system planets?\"],\r\n  \"rights\": [{ 'text': 'Jupiter', 'img': '/./images/jupiter.jpg', 'choice': true },\r\n  { 'text': 'Mars', 'img': '/./images/mars.jpg', 'choice': true },\r\n  { 'text': 'Venus', 'img': '/./images/venus.jpg', 'choice': true },\r\n  { 'text': 'Mercury', 'img': '/./images/mercury.jpg', 'choice': true },\r\n  { 'text': 'Saturn', 'img': '/./images/saturn.jpg', 'choice': true },\r\n  { 'text': 'Neptune', 'img': '/./images/neptune.jpg', 'choice': true },\r\n  ],\r\n  \"wrongs\": [{ 'text': 'Moon', 'img': '/./images/FullMoon.jpg', 'choice': false },\r\n  { 'text': 'Europa', 'img': '/./images/europa.jpg', 'choice': false },\r\n  { 'text': 'io', 'img': '/./images/io.jpg', 'choice': false },\r\n  { 'text': 'Black Hole', 'img': '/./images/blackhole.jpg', 'choice': false },\r\n  { 'text': 'Sun', 'img': '/./images/Solar_Orbiter.gif', 'choice': false }],\r\n  \"positions\": 6,\r\n  \"correct\": 4\r\n},\r\n{\r\n  \"question\": [\"What is second (escape Earth orbit) cosmic velocity?\"],\r\n  \"rights\": [{ 'text': '6.96 miles/sec','img': '',  'choice': true },\r\n             { 'text': '11.2km/sec','img': '', 'choice': true },\r\n  ],\r\n  \"wrongs\": [\r\n             { 'text': '7.9km/sec','img': '',  'choice': false },\r\n             { 'text': '4.9 miles/sec','img': '',  'choice': false },\r\n             { 'text': '42km/sec','img': '', 'choice': false },\r\n             { 'text': '300m/sec','img': '', 'choice': false },\r\n             { 'text': '300,000km/sec','img': '', 'choice': false },\r\n             { 'text': '4km/sec','img': '', 'choice': false },\r\n  ],\r\n \r\n  \"positions\": 4,\r\n  \"correct\": 1\r\n},\r\n{\r\n  \"question\": [\"Choose planet's Moon?\"],\r\n  \"rights\": [\r\n    { 'text': 'Europa', 'img': '/./images/europa.jpg', 'choice': true },\r\n    { 'text': 'Phobos', 'img': '/./images/phobos.jpg', 'choice': true },\r\n    { 'text': 'Io', 'img': '/./images/io.jpg', 'choice': true },\r\n  ],\r\n  \"wrongs\": [{ 'text': 'Jupiter', 'img': '/./images/jupiter.jpg', 'choice': false },\r\n  { 'text': 'Mars', 'img': '/./images/mars.jpg', 'choice': false },\r\n  { 'text': 'Venus', 'img': '/./images/venus.jpg', 'choice': false },\r\n  { 'text': 'Mercury', 'img': '/./images/mercury.jpg', 'choice': false },\r\n  { 'text': 'Saturn', 'img': '/./images/saturn.jpg', 'choice': false },\r\n  { 'text': 'Neptune', 'img': '/./images/neptune.jpg', 'choice': false },\r\n  { 'text': 'Ceres', 'img': '/./images/ceres.jpg', 'choice': false }\r\n  ],\r\n  \"positions\": 4,\r\n  \"correct\": 1\r\n},\r\n{\r\n  \"question\": [\"Choose Mars's Moons?\"],\r\n  \"rights\": [\r\n    { 'text': 'Deimos', 'img': '/./images/deimos.jpg', 'choice': true },\r\n    { 'text': 'Phobos', 'img': '/./images/phobos.jpg', 'choice': true },\r\n  ],\r\n  \"wrongs\": [{ 'text': 'Io', 'img': '/./images/io.jpg', 'choice': false },\r\n  { 'text': 'Europa', 'img': '/./images/europa.jpg', 'choice': false },\r\n  { 'text': 'Venus', 'img': '/./images/venus.jpg', 'choice': false },\r\n  { 'text': 'Mercury', 'img': '/./images/mercury.jpg', 'choice': false },\r\n  { 'text': 'Saturn', 'img': '/./images/saturn.jpg', 'choice': false },\r\n  { 'text': 'Neptune', 'img': '/./images/neptune.jpg', 'choice': false },\r\n  { 'text': 'Ceres', 'img': '/./images/ceres.jpg', 'choice': false }\r\n  ],\r\n  \"positions\": 6,\r\n  \"correct\": 2\r\n},\r\n{\r\n  \"question\": [\"Choose 4 largest Jupiter's Moons?\"],\r\n  \"rights\": [\r\n    { 'text': 'Ganymede', 'img': '/./images/ganymede.jpg', 'choice': true },\r\n    { 'text': 'Callisto', 'img': '/./images/callisto.jpg', 'choice': true },\r\n    { 'text': 'Io', 'img': '/./images/io.jpg', 'choice': true },\r\n    { 'text': 'Europa', 'img': '/./images/europa.jpg', 'choice': true },\r\n  ],\r\n  \"wrongs\": [\r\n  { 'text': 'Venus', 'img': '/./images/venus.jpg', 'choice': false },\r\n  { 'text': 'Mercury', 'img': '/./images/mercury.jpg', 'choice': false },\r\n  { 'text': 'Saturn', 'img': '/./images/saturn.jpg', 'choice': false },\r\n  { 'text': 'Neptune', 'img': '/./images/neptune.jpg', 'choice': false },\r\n  { 'text': 'Ceres', 'img': '/./images/ceres.jpg', 'choice': false }\r\n  ],\r\n  \"positions\": 7,\r\n  \"correct\": 4\r\n},\r\n]\r\n\r\n\r\nfunction ToRenderEverything() {\r\n  var test = [];\r\n  var choiceSet=[];\r\n  const [displayQ, setDisplayQ] = useState(0);\r\n  const [resultTime,setResultTime]=useState('');\r\n  const [choices, setChoices] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [rating, setRating] = useState(0);\r\n  const [visible, setVisible] = useState(0);\r\n  const [testGenerated, setTestGenerated] = useState('');\r\n  function randomizer(arr) {\r\n\r\n    let testArray = [];\r\n    let answerCount = arr.length;\r\n    let positionN = 0;\r\n    for (let i = 0; i < answerCount; i++) {\r\n      positionN = Math.floor(Math.random() * arr.length)\r\n      testArray.push(arr[positionN]);\r\n      arr.splice(positionN, 1);\r\n\r\n    }\r\n    return testArray\r\n  }\r\n\r\n  function randomChoice(arr, n) {\r\n\r\n    let testArray = [];\r\n    let positionN = 0;\r\n    for (let i = 0; i < n; i++) {\r\n      positionN = Math.floor(Math.random() * arr.length)\r\n      testArray.push(arr[positionN]);\r\n      arr.splice(positionN, 1);\r\n    }\r\n    return testArray\r\n  }\r\n  function handleChoices(ch){ \r\n    let localChoices=choices;\r\n    localChoices.splice(displayQ,1,ch)\r\n     setChoices(localChoices); \r\n\r\n    }\r\n  function handleChangeQuestion(q){\r\n    if (q>0) {setDisplayQ(q - 1)}\r\n    else{\r\n      setDisplayQ(q);\r\n      setVisible(1);\r\n\r\n    }\r\n  }\r\n  function correctAnswers(){\r\n    let arr=[];\r\n    let arrSmall=[];\r\n    for (let i=0;i<testGenerated.length;i++){\r\n      arrSmall=[];\r\n      for (let j=0;j<testGenerated[i].answers.length;j++){\r\n        if (testGenerated[i].answers[j].choice===true) arrSmall.push(j)\r\n      }\r\n      arr.push(arrSmall)\r\n    }\r\n    return arr\r\n  }\r\n  function handleQuizEnd(t){\r\n    let arr=[];\r\n    let n=0;\r\n    console.log(t);\r\n    let correctArr=correctAnswers();\r\n    setVisible(0);\r\n    for (let i=0; i<correctArr.length;i++){\r\n      JSON.stringify(correctArr[i]) === JSON.stringify(choices[i])? arr.push(true):arr.push(false);\r\n      if (arr[i]===true) n+=1\r\n    }\r\n    console.log(((n/correctArr.length*100).toFixed(2)).toString());\r\n    setRating(((n/correctArr.length*100).toFixed(2)).toString());\r\n    setResults(arr);\r\n    setResultTime(t);\r\n    console.log(results)\r\n  }\r\n  \r\n  useEffect(() => {\r\n\r\n    let answersSet = [];\r\n    for (let i = 0; i < quizMain.length; i++) {\r\n      answersSet = randomChoice(quizMain[i].rights, quizMain[i].correct).concat(randomChoice(quizMain[i].wrongs, quizMain[i].positions - quizMain[i].correct));\r\n      answersSet = randomizer(answersSet);\r\n\r\n      test.push({\r\n        \"type\": quizMain[i].correct,\r\n        \"question\": quizMain[i].question[0],\r\n        \"answers\": answersSet,\r\n      })\r\n     choiceSet.splice(0, 0, [])\r\n      \r\n    }\r\n    setChoices(choiceSet);\r\n    setTestGenerated(test);\r\n    console.log(choices)\r\n    // console.log(choiceSet)\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\" style={{ maxWidth: \"1440px\", overflow: \"hidden\" }}>\r\n        <main className=\"container\">\r\n          <div className=\"jumbotron jumbotron-fluid bg-transparent\">\r\n            <div className=\"text-white align-middle\">\r\n\r\n              <h1>Hello</h1>\r\n              {results.length>0 && <ResultsDisplay res={results} rate={rating} time={resultTime} />}\r\n              {testGenerated && <Timer qNumber={testGenerated.length} hours={quizDuration[0]} minutes={quizDuration[1]} seconds={quizDuration[2]} onExit={(t) => {handleQuizEnd(t)}} onChange={(q) => {handleChangeQuestion(q)}}  />}\r\n            </div>\r\n            {testGenerated && <QuestionDisplay type={testGenerated[displayQ].type} vis={visible} question={testGenerated[displayQ].question} answers={testGenerated[displayQ].answers} checkedMarks={choices[displayQ]} onChange={(ch) => { handleChoices(ch)}}  />}\r\n          </div>\r\n         \r\n        </main>\r\n\r\n      </div>\r\n    </Fragment >\r\n  )\r\n}\r\n\r\nexport default ToRenderEverything;","C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\timer\\index.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\index.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\signup\\SignupCard.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\quiz-creation\\CreateQuizForm.js",["42","43"],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\firebase.js",[],"C:\\Users\\Sergey\\Desktop\\quiz-galaxy\\client\\src\\components\\ResultsDisplay\\index.js",[],{"ruleId":"44","severity":1,"message":"45","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":234,"column":6,"nodeType":"50","endLine":234,"endColumn":8,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"52","line":8,"column":9,"nodeType":"46","messageId":"47","endLine":8,"endColumn":14},{"ruleId":"44","severity":1,"message":"53","line":9,"column":9,"nodeType":"46","messageId":"47","endLine":9,"endColumn":17},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'choiceSet', 'choices', and 'test'. Either include them or remove the dependency array.","ArrayExpression",["54"],"'title' is assigned a value but never used.","'category' is assigned a value but never used.",{"desc":"55","fix":"56"},"Update the dependencies array to be: [choiceSet, choices, test]",{"range":"57","text":"58"},[8713,8715],"[choiceSet, choices, test]"]